#:include 'common.fypp'
submodule(forlab) forlab_linspace
    !! Version: experimental
    !!
    !! linspace creates a linearly spaced vector.   
    !!([Interface](../interface/linspace.html))
    !!### Syntax
    !!    x = linspace(x1, x2, n)
    !!
    !!### Description
    !! `x = linspace(x1, x2, n)` returns a vector of n evenly spaced points
    !! between `x1` and `x2`.
    !!
    !!### Examples
    !!    x = linspace(0, 10, 11)
    !!        0.  1.  2.  3.  4.  5.  6.  7.  8.  9.  10.
    use forlab_kinds
    implicit none

contains

    #:for k1, t1 in REAL_KINDS_TYPES
    module procedure linspace_${k1}$
        integer :: i
        real(${k1}$) :: by
        n = size(X)
        by = (to - from)/(n - 1)
        X = from + by*real([(i - 1, i=1, n)], ${k1}$)
        return
    end procedure

    module procedure logspace_${k1}$
        call linspace(X, log10(from), log10(to))
        X = 10._${k1}$**X
        return
    end procedure
    #:endfor

end submodule
