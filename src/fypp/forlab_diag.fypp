#:include "common.fypp"
submodule(forlab) forlab_diag
    !! Version: experimental
    !!
    !! diag creates diagonal matrix or get the diagonal of a matrix.
    !!([Interface](../interface/diag.html))
    !!### Syntax
    !!    x = diag(A)
    !!    A = diag(x)
    !!
    !!### Description
    !! `x = diag(A)` returns the main diagonal of matrix `A`.
    !!
    !! `A = diag(x)` returns a square diagonal matrix with the elements of `x` on
    !! the main diagonal.
    !!
    !!### Examples
    !!    A = eye(3)
    !!    x = diag(A)
    !!        1.  1.  1.
    !!
    !!    x = [ 1., 2., 3. ]
    !!    A = diag(x)
    !!        1.  0.  0.
    !!        0.  2.  0.
    !!        0.  0.  3.
    use forlab_kinds
    implicit none
    
contains
    #:for k1,t1 in REAL_KINDS_TYPES
    module procedure diag1_${k1}$
        integer :: i, n
        n = min(size(A, 1), size(A, 2))
        allocate (diag1_${k1}$ (n))
        do i = 1, n
            diag1_${k1}$ (i) = A(i, i)
        end do
        return
    end procedure

    module procedure diag2_${k1}$
        integer :: i, n
        n = size(x)
        diag2_${k1}$ = ${k1[0]}$zeros(n, n)
        do i = 1, n
            diag2_${k1}$ (i, i) = x(i)
        end do
        return
    end procedure
    #:endfor
end submodule
