#:include 'common.fypp'

#:def ranksuffix(RANK)
$:'' if RANK == 0 else '(' + ':' + ',:' * (RANK - 1) + ')'
#:enddef ranksuffix

#:set RANKS = range(0, 4)
submodule(forlab) forlab_randu
    use forlab_kinds
    implicit none
contains
    #:for k1, t1 in REAL_KINDS_TYPES
    #:for RANK in RANKS
    module procedure randu_${RANK}$_${k1}$
        #:if RANK == 0

        #:elif RANK == 1
        allocate (randu_${RANK}$_${k1}$ (dim1))
        #:elif RANK == 2
        allocate (randu_${RANK}$_${k1}$ (dim1, dim2))
        #:elif RANK == 3
        allocate (randu_${RANK}$_${k1}$ (dim1, dim2, dim3))
        #:endif

        call random_number(randu_${RANK}$_${k1}$)
        return
    end procedure

    #:endfor
    #:endfor
end submodule
