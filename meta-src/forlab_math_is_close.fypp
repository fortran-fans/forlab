#:include "common.fypp"

submodule(forlab_math) forlab_math_is_close

contains

    #! Determines whether the values of `a` and `b` are close.

    #:for k1, t1 in REAL_KINDS_TYPES
    elemental module function is_close_${t1[0]}$${k1}$(a, b, rel_tol, abs_tol) result(close)
        ${t1}$, intent(in) :: a, b
        real(${k1}$), intent(in), optional :: rel_tol, abs_tol
        logical :: close

        close = abs(a - b) <= max( abs(optval(rel_tol, 1.0e-9_${k1}$)*max(abs(a), abs(b))), &
                                   abs(optval(abs_tol, 0.0_${k1}$)) )

    end function is_close_${t1[0]}$${k1}$
    #:endfor

    #:for k1, t1 in CMPLX_KINDS_TYPES
    elemental module function is_close_${t1[0]}$${k1}$(a, b, rel_tol, abs_tol) result(close)
        ${t1}$, intent(in) :: a, b
        real(${k1}$), intent(in), optional :: rel_tol, abs_tol
        logical :: close

        close = is_close_r${k1}$(a%re, b%re, rel_tol, abs_tol) .and. &
                is_close_r${k1}$(a%im, b%im, rel_tol, abs_tol)

    end function is_close_${t1[0]}$${k1}$
    #:endfor

end submodule forlab_math_is_close